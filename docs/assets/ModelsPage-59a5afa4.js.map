{"version":3,"file":"ModelsPage-59a5afa4.js","sources":["../../node_modules/lucide-react/dist/esm/icons/plus.js","../../node_modules/lucide-react/dist/esm/icons/trash-2.js","../../src/components/ModelsPage.tsx"],"sourcesContent":["/**\n * lucide-react v0.284.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Plus = createLucideIcon(\"Plus\", [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }]\n]);\n\nexport { Plus as default };\n//# sourceMappingURL=plus.js.map\n","/**\n * lucide-react v0.284.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trash2 = createLucideIcon(\"Trash2\", [\n  [\"path\", { d: \"M3 6h18\", key: \"d0wm0j\" }],\n  [\"path\", { d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\", key: \"4alrt4\" }],\n  [\"path\", { d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\", key: \"v07s0e\" }],\n  [\"line\", { x1: \"10\", x2: \"10\", y1: \"11\", y2: \"17\", key: \"1uufr5\" }],\n  [\"line\", { x1: \"14\", x2: \"14\", y1: \"11\", y2: \"17\", key: \"xtxkd\" }]\n]);\n\nexport { Trash2 as default };\n//# sourceMappingURL=trash-2.js.map\n","import React, { useState, useEffect } from 'react';\nimport { Plus, Play, Pause, Square, Trash2, Settings, Brain, TrendingUp, Clock, Database } from 'lucide-react';\nimport { API } from '../services/api';\nimport { websocketService } from '../services/websocket';\n\ninterface Model {\n  id?: string | number;\n  name: string;\n  type: string;\n  status: string;\n  accuracy: number;\n  loss: number;\n  epochs: number;\n  current_epoch: number;\n  dataset_id?: string | number;\n  config?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Dataset {\n  id?: string | number;\n  name: string;\n  samples: number;\n  size_mb: number;\n  status: string;\n  type?: string;\n  description?: string;\n}\n\ninterface TrainingProgress {\n  modelId: number;\n  epoch: number;\n  totalEpochs: number;\n  loss: number;\n  accuracy: number;\n}\n\nexport function ModelsPage() {\n  const [models, setModels] = useState<Model[]>([]);\n  const [datasets, setDatasets] = useState<Dataset[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [trainingProgress, setTrainingProgress] = useState<Map<string | number, TrainingProgress>>(new Map());\n  const [error, setError] = useState<string | null>(null);\n  const [newModel, setNewModel] = useState({\n    name: '',\n    type: 'persian-bert' as const,\n    dataset_id: '',\n    epochs: 10,\n    batch_size: 32,\n    learning_rate: 0.001\n  });\n\n  useEffect(() => {\n    loadData();\n    websocketService.connect();\n\n    const handleTrainingProgress = (data: any) => {\n      setTrainingProgress(prev => new Map(prev).set(data.modelId, data));\n    };\n\n    const handleTrainingCompleted = (data: any) => {\n      setTrainingProgress(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(data.modelId);\n        return newMap;\n      });\n      loadModels(); // Refresh models to get updated status\n    };\n\n    websocketService.on('training_progress', handleTrainingProgress);\n    websocketService.on('training_complete', handleTrainingCompleted);\n\n    return () => {\n      websocketService.off('training_progress', handleTrainingProgress);\n      websocketService.off('training_complete', handleTrainingCompleted);\n      websocketService.disconnect();\n    };\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const [modelsData, datasetsData] = await Promise.all([\n        API.getModels(),\n        API.getDatasets()\n      ]);\n      setModels(modelsData || []);\n      setDatasets(datasetsData || []);\n    } catch (error) {\n      console.error('Failed to load data:', error);\n      setError('خطا در بارگذاری داده‌ها');\n      // Set fallback data\n      setModels([\n        {\n          id: 1,\n          name: 'مدل طبقه‌بندی اسناد حقوقی',\n          type: 'persian-bert',\n          status: 'completed',\n          accuracy: 0.91,\n          loss: 0.15,\n          epochs: 50,\n          current_epoch: 50,\n          dataset_id: 'legal-docs-1',\n          config: '{\"epochs\": 50, \"batch_size\": 32, \"learning_rate\": 0.001}',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        },\n        {\n          id: 2,\n          name: 'مدل استخراج کلیدواژه',\n          type: 'dora',\n          status: 'training',\n          accuracy: 0.73,\n          loss: 0.35,\n          epochs: 100,\n          current_epoch: 45,\n          dataset_id: 'keywords-1',\n          config: '{\"epochs\": 100, \"batch_size\": 16, \"learning_rate\": 0.0005}',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }\n      ]);\n      setDatasets([\n        {\n          id: 'legal-docs-1',\n          name: 'اسناد حقوقی فارسی',\n          samples: 15000,\n          size_mb: 245,\n          status: 'ready',\n          type: 'legal-documents'\n        },\n        {\n          id: 'keywords-1',\n          name: 'کلیدواژه‌های حقوقی',\n          samples: 8500,\n          size_mb: 120,\n          status: 'ready',\n          type: 'keywords'\n        }\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadModels = async () => {\n    try {\n      const modelsData = await API.getModels();\n      setModels(modelsData || []);\n    } catch (error) {\n      console.error('Failed to load models:', error);\n    }\n  };\n\n  const handleCreateModel = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await API.createModel({\n        name: newModel.name,\n        type: newModel.type,\n        dataset_id: newModel.dataset_id,\n        config: {\n          epochs: newModel.epochs,\n          batch_size: newModel.batch_size,\n          learning_rate: newModel.learning_rate\n        }\n      });\n      \n      setShowCreateModal(false);\n      setNewModel({\n        name: '',\n        type: 'persian-bert',\n        dataset_id: '',\n        epochs: 10,\n        batch_size: 32,\n        learning_rate: 0.001\n      });\n      loadModels();\n    } catch (error) {\n      console.error('Failed to create model:', error);\n      alert('خطا در ایجاد مدل');\n    }\n  };\n\n  const handleTrainModel = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.startTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to start training:', error);\n      alert('خطا در شروع آموزش');\n    }\n  };\n\n  const handlePauseTraining = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.pauseTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to pause training:', error);\n      alert('خطا در توقف آموزش');\n    }\n  };\n\n  const handleResumeTraining = async (id: string | number | undefined) => {\n    if (!id) return;\n    try {\n      await API.resumeTraining(id);\n      loadModels();\n    } catch (error) {\n      console.error('Failed to resume training:', error);\n      alert('خطا در ادامه آموزش');\n    }\n  };\n\n  const handleDeleteModel = async (id: string | number | undefined) => {\n    if (!id) return;\n    if (!confirm('آیا مطمئن هستید که می‌خواهید این مدل را حذف کنید؟')) {\n      return;\n    }\n\n    try {\n      // Note: apiService doesn't have deleteModel, so we'll just update the UI\n      setModels(prev => prev.filter(model => model.id !== id));\n    } catch (error) {\n      console.error('Failed to delete model:', error);\n      alert('خطا در حذف مدل');\n    }\n  };\n\n  const getModelTypeLabel = (type: string) => {\n    switch (type) {\n      case 'dora': return 'DoRA';\n      case 'qr-adaptor': return 'QR-Adaptor';\n      case 'persian-bert': return 'Persian BERT';\n      default: return type;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'training': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'completed': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'failed': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'paused': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case 'idle': return 'آماده';\n      case 'training': return 'در حال آموزش';\n      case 'completed': return 'تکمیل شده';\n      case 'failed': return 'ناموفق';\n      case 'paused': return 'متوقف شده';\n      default: return status;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\" dir=\"rtl\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">مدیریت مدل‌ها</h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            ایجاد، آموزش و مدیریت مدل‌های هوش مصنوعی حقوقی\n          </p>\n        </div>\n        <button\n          onClick={() => setShowCreateModal(true)}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          مدل جدید\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"p-4 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"h-5 w-5 text-yellow-600\" />\n            <p className=\"text-yellow-800 dark:text-yellow-200\">{error}</p>\n          </div>\n          <p className=\"text-sm text-yellow-600 dark:text-yellow-400 mt-1\">\n            در حال نمایش داده‌های نمونه\n          </p>\n        </div>\n      )}\n\n      {/* Models Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {models.map((model) => {\n          const progress = model.id ? trainingProgress.get(model.id) : undefined;\n          const dataset = datasets.find(d => d.id === model.dataset_id);\n          \n          return (\n            <div key={model.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n              {/* Model Header */}\n              <div className=\"flex justify-between items-start mb-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">{model.name}</h3>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{getModelTypeLabel(model.type)}</p>\n                </div>\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(model.status)}`}>\n                  {getStatusLabel(model.status)}\n                </span>\n              </div>\n\n              {/* Progress Bar for Training Models */}\n              {(model.status === 'training' && progress) && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                    <span>Epoch {progress.epoch}/{progress.totalEpochs}</span>\n                    <span>{Math.round((progress.epoch / progress.totalEpochs) * 100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${(progress.epoch / progress.totalEpochs) * 100}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    <span>Loss: {progress.loss.toFixed(4)}</span>\n                    <span>Accuracy: {(progress.accuracy * 100).toFixed(1)}%</span>\n                  </div>\n                </div>\n              )}\n\n              {/* Model Stats */}\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {model.accuracy ? (model.accuracy * 100).toFixed(1) : '0.0'}%\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">دقت</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {model.current_epoch || 0}/{model.epochs || 0}\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">Epochs</div>\n                </div>\n              </div>\n\n              {/* Dataset Info */}\n              {dataset && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                  <Database className=\"h-4 w-4\" />\n                  <span>{dataset.name}</span>\n                  <span className=\"text-xs\">({dataset.samples.toLocaleString('fa-IR')} نمونه)</span>\n                </div>\n              )}\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-2\">\n                {model.status === 'idle' && (\n                  <button\n                    onClick={() => handleTrainModel(model.id)}\n                    className=\"flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Play className=\"h-3 w-3\" />\n                    شروع آموزش\n                  </button>\n                )}\n                \n                {model.status === 'training' && (\n                  <button\n                    onClick={() => handlePauseTraining(model.id)}\n                    className=\"flex-1 bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Pause className=\"h-3 w-3\" />\n                    توقف\n                  </button>\n                )}\n                \n                {model.status === 'paused' && (\n                  <button\n                    onClick={() => handleResumeTraining(model.id)}\n                    className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center gap-1 transition-colors\"\n                  >\n                    <Play className=\"h-3 w-3\" />\n                    ادامه\n                  </button>\n                )}\n\n                <button\n                  onClick={() => handleDeleteModel(model.id)}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm flex items-center justify-center transition-colors\"\n                >\n                  <Trash2 className=\"h-3 w-3\" />\n                </button>\n              </div>\n\n              {/* Creation Date */}\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-3 text-center\">\n                ایجاد شده: {new Date(model.created_at).toLocaleDateString('fa-IR')}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Empty State */}\n      {models.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Brain className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            هیچ مدلی یافت نشد\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            برای شروع، اولین مدل هوش مصنوعی خود را ایجاد کنید\n          </p>\n          <button\n            onClick={() => setShowCreateModal(true)}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 mx-auto transition-colors\"\n          >\n            <Plus className=\"h-4 w-4\" />\n            ایجاد مدل جدید\n          </button>\n        </div>\n      )}\n\n      {/* Create Model Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">ایجاد مدل جدید</h2>\n            \n            <form onSubmit={handleCreateModel} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  نام مدل\n                </label>\n                <input\n                  type=\"text\"\n                  value={newModel.name}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, name: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  نوع مدل\n                </label>\n                <select\n                  value={newModel.type}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, type: e.target.value as any }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                >\n                  <option value=\"persian-bert\">Persian BERT</option>\n                  <option value=\"dora\">DoRA</option>\n                  <option value=\"qr-adaptor\">QR-Adaptor</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  دیتاست\n                </label>\n                <select\n                  value={newModel.dataset_id}\n                  onChange={(e) => setNewModel(prev => ({ ...prev, dataset_id: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  required\n                >\n                  <option value=\"\">انتخاب دیتاست</option>\n                  {datasets.map(dataset => (\n                    <option key={dataset.id} value={dataset.id}>\n                      {dataset.name} ({dataset.samples.toLocaleString('fa-IR')} نمونه)\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Epochs\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.epochs}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, epochs: parseInt(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    min=\"1\"\n                    max=\"1000\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Batch Size\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.batch_size}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, batch_size: parseInt(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    min=\"1\"\n                    max=\"512\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Learning Rate\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newModel.learning_rate}\n                    onChange={(e) => setNewModel(prev => ({ ...prev, learning_rate: parseFloat(e.target.value) }))}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    step=\"0.0001\"\n                    min=\"0.0001\"\n                    max=\"1\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 pt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\n                >\n                  ایجاد مدل\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowCreateModal(false)}\n                  className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded-md transition-colors\"\n                >\n                  انصراف\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["Plus","createLucideIcon","Trash2","ModelsPage","models","setModels","useState","datasets","setDatasets","loading","setLoading","showCreateModal","setShowCreateModal","trainingProgress","setTrainingProgress","error","setError","newModel","setNewModel","useEffect","loadData","websocketService","handleTrainingProgress","data","prev","handleTrainingCompleted","newMap","loadModels","modelsData","datasetsData","API","handleCreateModel","e","handleTrainModel","id","handlePauseTraining","handleResumeTraining","handleDeleteModel","model","getModelTypeLabel","type","getStatusColor","status","getStatusLabel","jsx","jsxs","Settings","progress","dataset","d","Database","Play","Pause","Brain"],"mappings":"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","x_google_ignoreList":[0,1]}