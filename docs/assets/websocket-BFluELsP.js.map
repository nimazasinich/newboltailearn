{"version":3,"file":"websocket-BFluELsP.js","sources":["../../src/services/websocket.ts"],"sourcesContent":["// Re-export from the new wsClient for compatibility\nexport { wsClient as default, WSEventType as WebSocketEventType } from './wsClient'\nexport type { WSEvent as WebSocketMessage, WSEventListener as EventHandler } from './wsClient'\n\n// Legacy compatibility wrapper\nimport { wsClient, WSEventType, WSEventListener } from './wsClient'\n\nexport class WebSocketService {\n  connect() {\n    return wsClient.connect()\n  }\n\n  disconnect() {\n    wsClient.disconnect()\n  }\n\n  on(eventType: WSEventType, handler: WSEventListener) {\n    wsClient.on(eventType, handler)\n  }\n\n  off(eventType: WSEventType, handler: WSEventListener) {\n    wsClient.off(eventType, handler)\n  }\n\n  get isConnected() {\n    return wsClient.isConnected\n  }\n}\n\nexport const websocketService = new WebSocketService()"],"names":["WebSocketService","wsClient","eventType","handler","websocketService"],"mappings":"2CAOO,MAAMA,CAAiB,CAC5B,SAAU,CACR,OAAOC,EAAS,QAAA,CAClB,CAEA,YAAa,CACXA,EAAS,WAAA,CACX,CAEA,GAAGC,EAAwBC,EAA0B,CACnDF,EAAS,GAAGC,EAAWC,CAAO,CAChC,CAEA,IAAID,EAAwBC,EAA0B,CACpDF,EAAS,IAAIC,EAAWC,CAAO,CACjC,CAEA,IAAI,aAAc,CAChB,OAAOF,EAAS,WAClB,CACF,CAEO,MAAMG,EAAmB,IAAIJ"}