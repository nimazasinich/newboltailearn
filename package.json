{
  "name": "iranian-legal-archive",
  "private": true,
  "version": "1.0.0",
  "type": "module",
  "description": "Persian Legal Document Archive System with AI Classification and Web Scraping",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "dev": "vite --config vite.config.ts",
    "build": "vite build --config vite.config.ts",
    "build:gh": "cross-env VITE_BASE_PATH=/newboltailearn/ vite build --config vite.config.ts && node scripts/make-404.js",
    "preview": "vite preview --config vite.config.ts",
    "start": "NODE_ENV=production PORT=8000 node server.js",
    "start:dev": "NODE_ENV=development PORT=8000 node server/index.js",
    "start:safe": "npm run check:permissions && npm run render:verify-abi && npm run start",
    "preinstall": "node -e \"console.log('Node:', process.version, 'ABI:', process.versions.modules)\"",
    "postinstall": "npm run verify:better-sqlite3 || npm run rebuild:better-sqlite3",
    "verify:better-sqlite3": "node -e \"try{require('better-sqlite3');console.log('✅ better-sqlite3 loaded successfully')}catch(e){console.error('❌ better-sqlite3 failed:',e.message);process.exit(1)}\"",
    "rebuild:better-sqlite3": "npm rebuild better-sqlite3 --build-from-source && npm run verify:better-sqlite3",
    "health-check": "node -e \"require('better-sqlite3'); console.log('Health: OK')\"",
    "render:clean-build": "rm -rf node_modules package-lock.json && npm cache clean --force && npm ci",
    "render:verify-abi": "node -e \"console.log('✅ Node:', process.version, 'ABI:', process.versions.modules); try{require('better-sqlite3'); console.log('✅ better-sqlite3: OK')}catch(e){console.error('❌ better-sqlite3:', e.message); process.exit(1)}\"",
    "check:permissions": "node -e \"const fs = require('fs'); const path = './data'; try { fs.mkdirSync(path, {recursive: true}); fs.accessSync(path, fs.constants.W_OK); console.log('✅ Write permissions OK'); } catch(e) { console.error('❌ Permission error:', e.message); process.exit(1); }\"",
    "lint": "eslint . --report-unused-disable-directives --max-warnings 0",
    "type-check": "tsc --noEmit --project tsconfig.app.json",
    "compile-server": "echo 'Server compilation not needed - using JS files directly'",
    "test": "vitest run",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:e2e": "playwright test",
    "test:coverage": "vitest run --coverage",
    "db:backup": "node scripts/backup-db.js",
    "deploy:validate": "./scripts/validate-deployment.sh",
    "deploy:monitor": "node scripts/monitor-deployment.js",
    "security:check": "npm audit --omit=dev --audit-level=high || true",
    "security:check:strict": "npm audit --omit=dev --audit-level=moderate",
    "docker:build": "./docker-build.sh",
    "docker:build:backend": "./docker-build.sh -t backend",
    "docker:build:frontend": "./docker-build.sh -t frontend",
    "docker:build:dev": "./docker-build.sh -t development",
    "docker:build:all": "./docker-build.sh -t backend && ./docker-build.sh -t frontend && ./docker-build.sh -t development",
    "docker:run": "./docker-run.sh",
    "docker:run:dev": "./docker-run.sh -m development",
    "docker:run:backend": "./docker-run.sh -m backend-only",
    "docker:run:frontend": "./docker-run.sh -m frontend-only",
    "docker:stop": "./docker-run.sh --stop",
    "docker:logs": "./docker-run.sh --logs",
    "docker:status": "./docker-run.sh --status",
    "compose:up": "docker-compose up --build -d",
    "compose:up:dev": "docker-compose -f docker-compose-dev.yml up --build -d",
    "compose:down": "docker-compose down",
    "compose:down:dev": "docker-compose -f docker-compose-dev.yml down",
    "compose:logs": "docker-compose logs -f",
    "compose:logs:dev": "docker-compose -f docker-compose-dev.yml logs -f",
    "docker:compose:up": "docker compose up --build -d",
    "docker:compose:down": "docker compose down -v",
    "docker:compose:dev": "docker compose --profile dev up --build -d",
    "docker:clean": "docker system prune -af && docker volume prune -f",
    "docker:logs:backend": "docker logs -f newbolt-backend",
    "docker:logs:frontend": "docker logs -f newbolt-frontend",
    "docker:shell:backend": "docker exec -it newbolt-backend sh",
    "clean-install": "node clean-install.js",
    "setup": "npm run clean-install && npm run docker:compose:up"
  },
  "dependencies": {
    "archiver": "^7.0.1",
    "axios": "^1.7.7",
    "bcryptjs": "^2.4.3",
    "better-sqlite3": "^11.6.0",
    "body-parser": "^1.20.2",
    "clsx": "^2.0.0",
    "compression": "^1.7.4",
    "connect-sqlite3": "^0.9.11",
    "cors": "^2.8.5",
    "csrf": "^3.1.0",
    "dotenv": "^16.3.1",
    "express": "^4.21.0",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-session": "^1.17.3",
    "framer-motion": "^10.16.4",
    "helmet": "^7.1.0",
    "isomorphic-dompurify": "^2.28.0",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "lucide-react": "^0.284.0",
    "multer": "^1.4.5-lts.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.15.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^1.14.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.14",
    "eslint": "^8.45.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "postcss": "^8.4.27",
    "tailwindcss": "^3.3.3",
    "typescript": "^5.0.2",
    "vite": "^4.4.5"
  }
}
