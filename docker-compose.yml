version: '3.8'

services:
  persian-legal-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: persian-legal-ai
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/data/persian_legal_ai.db
      - DATASET_DIRECTORY=/app/datasets
      - MODEL_DIRECTORY=/app/models
      - CHECKPOINT_DIRECTORY=/app/checkpoints
      - EXPORT_DIRECTORY=/app/exports
      - HF_TOKEN_B64=${HF_TOKEN_B64:-}
      - HF_TOKEN_ENC=${HF_TOKEN_ENC:-}
      - JWT_SECRET=${JWT_SECRET:-}
      - SESSION_SECRET=${SESSION_SECRET:-}
      - CSRF_SECRET=${CSRF_SECRET:-}
    volumes:
      - ./data:/app/data
      - ./datasets:/app/datasets
      - ./models:/app/models
      - ./checkpoints:/app/checkpoints
      - ./exports:/app/exports
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - persian-legal-network

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: persian-legal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - persian-legal-network
    profiles:
      - cache

  # Optional: Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: persian-legal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - persian-legal-ai
    restart: unless-stopped
    networks:
      - persian-legal-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  persian-legal-network:
    driver: bridge